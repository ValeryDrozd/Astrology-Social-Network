name: Build & Deploy
on:
  push:
    branches: [development/docker]

env:
  SERVER_PORT: ${{ secrets.PORT }}
  GOOGLE_RESOURCE_ID: ${{ secrets.GOOGLE_RESOURCE_ID }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  PGHOST: ${{ secrets.PGHOST }}
  PGUSER: ${{ secrets.PGUSER }}
  PGDATABASE: ${{ secrets.PGDATABASE }}
  PGPASSWORD: ${{ secrets.PGPASSWORD }}
  PGPORT: ${{ secrets.PGPORT }}
  REACT_APP_GOOGLE_CLIENT_ID: ${{ secrets.REACT_APP_GOOGLE_CLIENT_ID }}
  REACT_APP_ADDR_NAME: ${{ secrets.REACT_APP_ADDR_NAME }}
  REACT_APP_JWT_SECRET: ${{ secrets.REACT_APP_JWT_SECRET }}
  REACT_APP_SERVER_URL: ${{ secrets.REACT_APP_SERVER_URL }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Deploy NodeJS app
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{secrets.SSH_HOST}}
          key: ${{secrets.SSH_KEY}}
          username: ${{ secrets.SSH_USERNAME }}
          command_timeout: 25m
          envs: SERVER_PORT, GOOGLE_RESOURCE_ID, JWT_SECRET, PGHOST, PGUSER, PGDATABASE, PGPASSWORD, PGPORT, REACT_APP_GOOGLE_CLIENT_ID, REACT_APP_ADDR_NAME, REACT_APP_JWT_SECRET, REACT_APP_SERVER_URL
          script: |
            echo 'Start deploy'
            rm -rf Astrology-Social-Network
            git clone -b development/docker git@github.com:ValeryDrozd/Astrology-Social-Network.git
            cd Astrology-Social-Network
            echo 'SERVER_PORT'
            echo $SERVER_PORT
            export SERVER_PORT=$SERVER_PORT
            export GOOGLE_RESOURCE_ID=$GOOGLE_RESOURCE_ID
            export JWT_SECRET=$JWT_SECRET
            export PGHOST=$PGHOST
            export PGUSER=$PGUSER
            export PGDATABASE=$PGDATABASE
            export PGPASSWORD=$PGPASSWORD
            export PGPORT=$PGPORT
            export REACT_APP_GOOGLE_CLIENT_ID=$REACT_APP_GOOGLE_CLIENT_ID
            export REACT_APP_ADDR_NAME=$REACT_APP_ADDR_NAME
            export REACT_APP_JWT_SECRET=$REACT_APP_JWT_SECRET
            export REACT_APP_SERVER_URL=$REACT_APP_SERVER_URL
            docker-compose build
            docker-compose up -d
            echo 'Deployment successful to digital ocean' 